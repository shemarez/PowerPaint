package tools;

import java.awt.Point;
import java.awt.Shape;
import java.awt.event.MouseEvent;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;

import gui.DrawingPanel;

public class RectangleListener extends AbstractTools {
    Shape myShape;
    Point myStartPoint;
    Point myEndPoint;
    ArrayList<Shape> myShapesList;
    Rectangle2D myCurrentShape;
    
    
   
    
    public RectangleListener() {
        super("Rectangle");
        myShapesList = new ArrayList<Shape>();
    }
    
  /*  public Shape getShape() {
        return myCurrentShape;
        
    }*/

    @Override
    public Shape drawShapes(final Point theStartPoint, final Point theEndPoint) {
        // TODO Auto-generated method stub
        myStartPoint = theStartPoint;
        myCurrentShape = new Rectangle2D.Double(theStartPoint.x, theStartPoint.y,
                                                         theEndPoint.x, theEndPoint.y);
        //myCurrentShape = new Rectangle2D.Double(theStartPoint.x, theEndPoint.x, theStartPoint.y, theEndPoint.y);
       return myCurrentShape;
    }
    
    @Override
    public Shape moveShape(final Point theStartPoint, final Point theEndPoint) {
       myCurrentShape.setFrameFromDiagonal(myStartPoint.x, myStartPoint.y
                                               , theEndPoint.x, theEndPoint.y);
        
        

        return myCurrentShape;
    }
    @Override
    public Shape moveOnlySquare(final Point theStartPoint, final Point theEndPoint) {
        myCurrentShape.setFrameFromDiagonal(theStartPoint.x, theEndPoint.x, theStartPoint.y, theEndPoint.y);
        myCurrentShape.setFrame(myCurrentShape);
        
        return myCurrentShape;
    }
    public Shape getShape() {
        // myPanel.addShapes(myCurrentShape);
         return myCurrentShape;
     }

  
}
