/*
 * TCSS 305 Winter 2016
 * PowerPaint part A
 */

package gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.Action;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * This class creates a the menu bar for the
 * powerPaint JFrame. It returns a complete menu
 * with sub menus and mnemonics. This is 
 * used in the PowerPaintMainGUI class where
 * it is set as the frames toolbar.
 * 
 * @author Shema Rezanejad
 * @version 1
 *
 */
public final class MenuBar extends JFrame {
    /** Generated UID. */
    private static final long serialVersionUID = 1173067086857296724L;
    
    /** Maximum ticks for JSlider. */
    private static final int MAX_TICKS = 20;
    
    /** Tick spacing for JSlider. */
    private static final int TICK_SPACING = 5;
    
    /** Minor tick spacing for JSlider. */
    private static final int MINOR_TICK_SPACING = 1;
    /** For File button. */
    private final JMenu myFileMenu;
    
    /** For options menu button. */
    private final JMenu myOptionsMenu;
    
    /** For tools menu button. */
    private final JMenu myToolsMenu;
    
    /** for help menu buttons. */
    private final JMenu myHelpMenu;
    
    /** Creates a menu bar. */
    private final JMenuBar myMenuBar;
    /** Color of the pen chosen by user. */
    private Color colorChosen;
    private ButtonGroup myGroup;
    
    /**
     * Constructor, initializes all JMenus.
     */
    public MenuBar() {
        super();
        myMenuBar = new JMenuBar();
        myFileMenu = new JMenu("File");
        myToolsMenu = new JMenu("Tools");
        myHelpMenu = new JMenu("Help");
        myOptionsMenu = new JMenu("Options");
        myGroup = new ButtonGroup();

    }
    /**
     * Calls all subMenu methods, returns a completed
     * menu bar. 
     * 
     * @return JMenuBar
     */
    public JMenuBar setUpComponents() {
        
        createSubMenuFile();
        createSubMenuOptions();
      //  createSubMenuTools();
        createSubMenuHelp();
        
        return createMenuBar();
        
    }
  /*  public void createMenuButton(final Action theAction) {
        final JRadioButtonMenuItem createdButton = new JRadioButtonMenuItem(theAction);

        myGroup.add(createdButton);
        myToolsMenu.add(createdButton);
    }*/
    /**
     * Creates a menubar, sets mnemonics.
     * @return JMenuBar myMenuBar
     */
    private JMenuBar createMenuBar() {
        myFileMenu.setMnemonic(KeyEvent.VK_F);
        myOptionsMenu.setMnemonic(KeyEvent.VK_O);
        myToolsMenu.setMnemonic(KeyEvent.VK_T);
        myHelpMenu.setMnemonic(KeyEvent.VK_H);
        
        myMenuBar.add(myFileMenu);
        myMenuBar.add(myOptionsMenu);
        myMenuBar.add(myToolsMenu);
        myMenuBar.add(myHelpMenu);
        
        return myMenuBar;

    }
    /**
     * Creates a sub menu for File menu Item.
     */
    private void createSubMenuFile() { 
        final JMenuItem undoAll = new JMenuItem("Undo all changes");
       // undoAll.setEnabled(false);
        final JMenuItem exit = new JMenuItem("Exit");
        
        undoAll.setMnemonic(KeyEvent.VK_U);
        exit.setMnemonic(KeyEvent.VK_E);

        myFileMenu.add(undoAll);
        myFileMenu.addSeparator();
        myFileMenu.add(exit);
        /*undoAll.addActionListener(new ActionListener() {
            DrawingPanel panel = new DrawingPanel();

            @Override
            public void actionPerformed(ActionEvent arg0) {
                System.out.println(panel.checkMyCanvas());
                if (panel.checkMyCanvas()) {
                    
                    undoAll.setEnabled(true);
                    setBackground(Color.WHITE);
                }

            }
        });*/
        
        exit.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                System.exit(0);
               // dispose();
            }
            
        });
        
    }
    /**
     * Creates sub menu for Options Menu. 
     */
    private void createSubMenuOptions() { 
        final JCheckBoxMenuItem squareCirc = new JCheckBoxMenuItem("Square/Circle only");
        final JMenu thickness = new JMenu("Thickness"); 
        final JMenuItem color = new JMenuItem("Color...");
        
        color.setMnemonic(KeyEvent.VK_C);
        thickness.setMnemonic(KeyEvent.VK_T);
        
        myOptionsMenu.add(squareCirc);
        myOptionsMenu.addSeparator();
        myOptionsMenu.add(thickness);
        myOptionsMenu.addSeparator();
        myOptionsMenu.add(color);

        color.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                final Color initialBackground = color.getBackground();
                colorChosen = JColorChooser.showDialog(null,
                                              "JColorChooser Sample", initialBackground);
                
                
            }
            
        });
        thickness.addChangeListener(new ChangeListener() {
            private JSlider mySlider = new JSlider(JSlider.HORIZONTAL, 0,
                                                   MAX_TICKS, TICK_SPACING);
            @Override
            public void stateChanged(final ChangeEvent theEvent) {
                mySlider.setMajorTickSpacing(TICK_SPACING);
                mySlider.setMinorTickSpacing(MINOR_TICK_SPACING);
                mySlider.setPaintTicks(true);
                mySlider.setPaintLabels(true);
                thickness.add(mySlider);
                
                
            }
            
        });
        
    }
    /**
     * Creates sub menu for Tools menu.
     */
    public void createSubMenuTools(Action theAction) {
       /* final ButtonGroup group = new ButtonGroup();
        final JRadioButtonMenuItem pencil = new JRadioButtonMenuItem("Pencil");
        final JRadioButtonMenuItem line = new JRadioButtonMenuItem("Line");
        final JRadioButtonMenuItem rectangle = new JRadioButtonMenuItem("Rectangle");
        final JRadioButtonMenuItem ellipse = new JRadioButtonMenuItem("Ellipse");
        
        group.add(pencil);
        group.add(line);
        group.add(rectangle);
        group.add(ellipse);
        myToolsMenu.add(pencil);
        myToolsMenu.add(line);
        myToolsMenu.add(rectangle);
        myToolsMenu.add(ellipse);*/
        
        final JRadioButtonMenuItem createdButton = new JRadioButtonMenuItem(theAction);

        myGroup.add(createdButton);
        myToolsMenu.add(createdButton);
        
    }
    /**
     *  Creates sub menu for Help menu.
     */
    private void createSubMenuHelp() {
        final JMenuItem about = new JMenuItem("About...");
        myHelpMenu.add(about);
        about.setMnemonic(KeyEvent.VK_A);
        
        about.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                final ImageIcon icon = new ImageIcon("images/popeyeIcon.png");
                JOptionPane.showMessageDialog(null,
                                             "TCSS 305 \nWinter 2016 \nShema Rezanejad"
                                             + "\nEat your spinach kids!",
                                             about.getText(),
                                             JOptionPane.INFORMATION_MESSAGE, icon);
            
                
            }
            
        });
        
    }

}
